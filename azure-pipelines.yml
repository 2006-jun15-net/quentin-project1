pool:
  vmImage: 'windows-latest'
steps:
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: 'd4952ac8-6496-4ada-a00e-5fc5f5d3c35d'
- task: SonarCloudPrepare@1
  inputs:
      SonarCloud: 'Sonar Cloud'
      organization: '2006-jun15-net'
      scannerMode: 'MSBuild'
      projectKey: '2006-jun15-net_quentin-project1'
      extraProperties: |
        sonar.exclusions=**/lib/**
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
        sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/*/coverage.opencover.xml

- script: dotnet build -c Release App.sln
  displayName: 'dotnet build '
- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test 
    projects: 'App.sln'
    arguments: ' --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
- task: SonarCloudAnalyze@1
- task: DotNetCoreCLI@2
  inputs:
    command: 'test' 
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '''$(Agent.TempDirectory)/*/coverage.cobertura.xml'''
    failIfCoverageEmpty: true
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    projects: ./*.sln
    publishWebProjects: true
  displayName: 'dotnet publish'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(27d24e29-5de1-40f6-85cf-709127ec138a)'
    appType: 'webApp'
    WebAppName: 'xfilgh'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    modifyOutputPath: true
    zipAfterPublish: true
  displayName: 'deploy'
